import 'package:calculator/features/calculator/domain/entities/calculation.dart';
import 'package:calculator/features/calculator/domain/usecases/calculate_expression.dart';
import 'package:calculator/features/calculator/domain/usecases/get_history.dart';
import 'package:flutter/material.dart';

class CalculatorController extends ChangeNotifier {
  final CalculateExpression calculateExpression;
  final GetHistory getHistory;

  CalculatorController({
    required this.calculateExpression,
    required this.getHistory,
  });

  String _expression = '';
  String _result = '';
  List<Calculation> _history = [];
  bool _loading = false;

  String get expression => _expression;

  String get result => _result;

  List<Calculation> get history => _history;

  bool get loading => _loading;

  void setExpression(String value) {
    print('üîÑ CalculatorController.setExpression: "$value"');
    _expression = value;
    print('üì¢ notifyListeners() –≤—ã–∑–≤–∞–Ω –∏–∑ setExpression');
    notifyListeners();
  }

  Future<void> calculate() async {
    print('üßÆ CalculatorController.calculate() –Ω–∞—á–∞—Ç–æ');
    _loading = true;
    print('üì¢ notifyListeners() –≤—ã–∑–≤–∞–Ω –∏–∑ calculate (loading = true)');
    notifyListeners();
    try {
      _result = await calculateExpression(_expression);
      print('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—É—á–µ–Ω: $_result');
      await fetchHistory();
    } finally {
      _loading = false;
      print('üì¢ notifyListeners() –≤—ã–∑–≤–∞–Ω –∏–∑ calculate (loading = false)');
      notifyListeners();
      print('üßÆ CalculatorController.calculate() –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    }
  }

  Future<void> fetchHistory() async {
    print('üìú CalculatorController.fetchHistory() –Ω–∞—á–∞—Ç–æ');
    _history = await getHistory();
    print('üìú –ò—Å—Ç–æ—Ä–∏—è –ø–æ–ª—É—á–µ–Ω–∞: ${_history.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤');
    print('üì¢ notifyListeners() –≤—ã–∑–≤–∞–Ω –∏–∑ fetchHistory');
    notifyListeners();
    print('üìú CalculatorController.fetchHistory() –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
  }
}
